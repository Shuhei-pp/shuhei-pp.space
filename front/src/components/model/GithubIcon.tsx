/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ble/0.glb -t -s 
*/

import type * as THREE from "three";
import React, { type JSX } from "react";
import { useGLTF } from "@react-three/drei";
import type { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
	nodes: {
		Cylinder: THREE.Mesh;
		Cylinder001: THREE.Mesh;
		Curve: THREE.Mesh;
	};
	materials: {
		Material: THREE.MeshPhysicalMaterial;
		["Material Purple"]: THREE.MeshStandardMaterial;
		["Material White"]: THREE.MeshStandardMaterial;
	};
	animations: unknown[];
};

export function GithubModel(props: JSX.IntrinsicElements["group"]) {
	const { nodes, materials } = useGLTF(
		"/glb/github.glb",
	) as unknown as GLTFResult;
	return (
		<group {...props} dispose={null}>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.Cylinder.geometry}
				material={materials.Material}
				position={[0, 0, 0.017]}
				rotation={[Math.PI / 2, 0, 0]}
				scale={[0.9, 0.608, 0.9]}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.Cylinder001.geometry}
				material={materials["Material Purple"]}
				rotation={[Math.PI / 2, 0, 0]}
			/>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.Curve.geometry}
				material={materials["Material White"]}
				position={[-0.02, -0.035, 0.085]}
				rotation={[Math.PI / 2, 0, 0]}
				scale={[80.523, 58.257, 80.523]}
			/>
		</group>
	);
}

useGLTF.preload("/0.glb");
